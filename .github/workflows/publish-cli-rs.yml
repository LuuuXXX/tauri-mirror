# Copyright 2019-2023 Tauri Programme within The Commons Conservancy
# SPDX-License-Identifier: Apache-2.0
# SPDX-License-Identifier: MIT

name: publish `tauri-cli`
env:
  MACOSX_DEPLOYMENT_TARGET: '10.13'
on:
  push:
    branches:
      - cli-1.63.0

jobs:
  build:
    runs-on: ${{ matrix.config.os }}

    strategy:
      fail-fast: false
      matrix:
        config:
          - os: ubuntu-20.04
            rust_target: x86_64-unknown-linux-gnu
            ext: ''
            args: ''
          - os: ubuntu-20.04
            rust_target: aarch64-unknown-linux-gnu
            ext: ''
            args: ''
          - os: macos-latest
            rust_target: x86_64-apple-darwin
            ext: ''
            args: ''
          - os: macos-latest
            rust_target: aarch64-apple-darwin
            ext: ''
            args: ''
          - os: windows-latest
            rust_target: x86_64-pc-windows-msvc
            ext: '.exe'
            args: ''
          - os: windows-latest
            rust_target: aarch64-pc-windows-msvc
            ext: '.exe'
            args: '--no-default-features --features native-tls,native-tls-vendored'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU for ARM64
        if: matrix.config.rust_target == 'aarch64-unknown-linux-gnu'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: aarch64

      - name: 'Setup Rust'
        if: matrix.config.rust_target != 'aarch64-unknown-linux-gnu'
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.config.rust_target }}

      - name: 'Setup Rust'
        if: matrix.config.rust_target == 'aarch64-unknown-linux-gnu'
        run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y

      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.config.rust_target }}

      - name: install Linux dependencies
        if: matrix.config.os == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev

      - name: Build CLI
        # if: matrix.config.rust_target != 'aarch64-unknown-linux-gnu'
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --manifest-path ./tooling/cli/Cargo.toml --release ${{ matrix.config.args }}

      - name: Upload CLI
        uses: actions/upload-artifact@v3
        with:
          name: cargo-tauri-${{ matrix.config.rust_target }}${{ matrix.config.ext }}
          path: tooling/cli/target/release/cargo-tauri${{ matrix.config.ext }}
          if-no-files-found: error

  upload:
    needs: build
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download built CLIs
        uses: actions/download-artifact@v3
        with:
          path: outputs

      - name: Pack archives
        run: ./.scripts/ci/pack-cli.sh

      - name: Get CLI version
        run: echo "CLI_VERSION=$(cat tooling/cli/metadata.json | jq '."cli.js".version' -r)" >> $GITHUB_ENV

      - name: Publish release
        uses: softprops/action-gh-release@50195ba7f6f93d1ac97ba8332a178e008ad176aa
        with:
          tag_name: tauri-cli-v${{ env.CLI_VERSION }}
          files: |
            outputs/cargo-tauri-*.zip
            outputs/cargo-tauri-*.tgz
